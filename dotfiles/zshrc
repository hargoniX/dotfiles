export EDITOR="vim"
alias dotdrop=~/dotfiles/dotdrop.sh --cfg=~/dotfiles/config.yaml
alias h=history
alias l='ls -lFh'     #size,show type,human readable
alias la='ls -lAFh'   #long list,show almost all,show type,human readable
alias ll='ls -l'      #long list
alias -g G='| grep'
alias -g L="| less"
alias fd='find . -type d -name'
alias ff='find . -type f -name'
alias rm='rm -i' # Ask before removal
alias cp='cp -i' # Ask before removal
alias mv='mv -i' # Ask before removal
# If nvim is available use it
if command -v nvim &> /dev/null; then
  alias vim="nvim"
fi
# Make zsh know about hosts already accessed by SSH
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat{/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'
export PATH=$PATH:$HOME/.local/bin:$HOME/.local/scripts
# Fzf tab up shift+ tab down
export FZF_DEFAULT_OPTS='--bind=tab:up --bind=btab:down'

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data inside tmux
export SAVEHIST=10000000
export HISTSIZE=10000000
export HISTFILE="$HOME/.zsh_history"

# completion
unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on successive tab press
setopt complete_in_word
setopt always_to_end
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Directory navigation
setopt autocd autopushd

# vi mode
bindkey -v
bindkey -v '^?' backward-delete-char # backspace deletion in vi-mode
# allow ctrl-a and ctrl-e to move to beginning/end of line
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
export KEYTIMEOUT=1 # for vi mode switch inside tmux

function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/<<<}/(main|viins)/}"
    RPS2=$RPS1
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select


# Make ctrl-z fg if it's used form within a shell
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# common zsh agent
if [ -f ~/.ssh/agent.env ] ; then
    . ~/.ssh/agent.env > /dev/null
    if ! kill -0 $SSH_AGENT_PID > /dev/null 2>&1; then
        echo "Stale agent file found. Spawning a new agent. "
        eval `ssh-agent | tee ~/.ssh/agent.env`
        ssh-add
    fi
else
    echo "Starting ssh-agent"
    eval `ssh-agent | tee ~/.ssh/agent.env`
    ssh-add
fi

autoload -Uz compinit

# speed up compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

autoload -Uz vcs_info
autoload -U colors && colors
precmd_vcs_info() { vcs_info  }
precmd_functions+=( precmd_vcs_info  )
setopt prompt_subst
export PROMPT="%{$fg_bold[green]%}%M%{$fg_bold[white]%}:%{$fg_bold[yellow]%}%~%{$fg_bold[white]%}|%{$fg_bold[cyan]%}\$vcs_info_msg_0_%{$fg_bold[white]%}>%{$reset_color%} "
zstyle ':vcs_info:git:*' formats '%b'

# Load fzf if it's available
if command -v fzf &> /dev/null; then
  source ~/.vim/plugged/fzf/shell/completion.zsh
  source ~/.vim/plugged/fzf/shell/key-bindings.zsh
else
  bindkey '^R' history-incremental-search-backward
fi

if [[ -d  ~/.rvm ]]
then
  export PATH="$PATH:$HOME/.rvm/bin"
  [[ -s "$HOME/.rvm/scripts/rvm"  ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a
fi

touch ~/.github_token
source ~/.github_token

touch ~/.zshrc_local
source ~/.zshrc_local
