export EDITOR="vim"
alias dotdrop=~/dotfiles/dotdrop.sh --cfg=~/dotfiles/config.yaml
alias h=history
alias l='ls -lFh'     #size,show type,human readable
alias la='ls -lAFh'   #long list,show almost all,show type,human readable
alias ll='ls -l'      #long list
alias -g G='| grep'
alias -g L="| less"
alias fd='find . -type d -name'
alias ff='find . -type f -name'
alias rm='rm -i' # Ask before removal
alias cp='cp -i' # Ask before removal
alias mv='mv -i' # Ask before removal
alias emacsnw="TERM=st-direct emacsclient -c -nw -a 'emacs -nw'"

# java stuff
alias mvn_full_run='rm -rf target/site && mvn compile verify jacoco:prepare-agent test jacoco:report javadoc:javadoc'
alias mvn_cov_report='xdg-open target/site/jacoco/index.html'
alias todo='emacs -nw ~/todo.org'

# Make zsh know about hosts already accessed by SSH
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat{/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'
# Fzf tab up shift+ tab down
export FZF_DEFAULT_OPTS='--bind=tab:up --bind=btab:down --color=fg:#282828,bg:#f2e5bc,hl:#458588 --color=fg+:#282828,bg+:#f2e5bc,hl+:#458588 --color=info:#282828,prompt:#282828,pointer:#282828 --color=marker:#282828,spinner:#282828,header:#282828'

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data inside tmux
export SAVEHIST=10000000
export HISTSIZE=10000000
export HISTFILE="$HOME/.zsh_history"

# completion
unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on successive tab press
setopt complete_in_word
setopt always_to_end
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Directory navigation
setopt autocd autopushd

# vi mode
bindkey -v
bindkey -v '^?' backward-delete-char # backspace deletion in vi-mode
# allow ctrl-a and ctrl-e to move to beginning/end of line
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
export KEYTIMEOUT=1 # for vi mode switch inside tmux

function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/<<<}/(main|viins)/}"
    RPS2=$RPS1
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select


# Make ctrl-z fg if it's used form within a shell
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

autoload -Uz compinit
# speed up compinit
if [ -f ~/.zcompdump(N.mh+24) ]; then
  compinit -C
else
  compinit
fi

autoload -Uz vcs_info
autoload -U colors && colors
precmd_vcs_info() { vcs_info  }
precmd_functions+=( precmd_vcs_info  )

setopt prompt_subst
LN=$'\n'
ICON="%(?.%{$fg[magenta]%}.%{$fg[red]%})Î»"
export PROMPT="%{$fg_bold[green]%}%M%{$fg_bold[white]%}:%{$fg_bold[yellow]%}%~%{$fg_bold[white]%}|%{$fg_bold[cyan]%}\$vcs_info_msg_0_${LN}${ICON} %{$reset_color%}"

zstyle ':vcs_info:git:*' formats '%b'

# Load fzf if it's available
if command -v fzf &> /dev/null; then
  source ~/.vim/plugged/fzf/shell/completion.zsh
  source ~/.vim/plugged/fzf/shell/key-bindings.zsh
else
  bindkey '^R' history-incremental-search-backward
fi

# emacs vterm support
vterm_printf(){
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
fi

vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)";
}
setopt PROMPT_SUBST
PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'

touch ~/.github_token
source ~/.github_token

touch ~/.zshrc_local
source ~/.zshrc_local
